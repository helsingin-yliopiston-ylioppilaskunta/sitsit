"""Update User model and add Org

Revision ID: 2a6e541ff5be
Revises: 876b26260167
Create Date: 2025-02-27 11:30:14.050019

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2a6e541ff5be'
down_revision: Union[str, None] = '876b26260167'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('userbase')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_name', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_dbuser_username', table_name='dbuser')
    op.drop_table('dbuser')
    op.drop_table('user')
    op.drop_index('ix_baseuser_username', table_name='baseuser')
    op.drop_table('baseuser')
    op.drop_index('ix_dborg_name', table_name='dborg')
    op.drop_table('dborg')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dborg',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('dborg_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='dborg_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_dborg_name', 'dborg', ['name'], unique=False)
    op.create_table('baseuser',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='baseuser_pkey')
    )
    op.create_index('ix_baseuser_username', 'baseuser', ['username'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey')
    )
    op.create_table('dbuser',
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('hash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('org_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['dborg.id'], name='dbuser_org_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='dbuser_pkey')
    )
    op.create_index('ix_dbuser_username', 'dbuser', ['username'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_name', 'users', ['name'], unique=False)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('userbase',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='userbase_pkey')
    )
    # ### end Alembic commands ###
